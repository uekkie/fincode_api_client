=begin
#fincode API

#fincodeのAPIリファレンスです。\\ fincodeは決済情報のほか様々なリソースを管理できるため、リソース指向なREST APIをベースとしたインターフェイス設計のもとでAPIを提供しています。\\ APIの呼び出しにはAPIキーによる認証が必要であり、リクエストの際に`Authorization`ヘッダーに有効なAPIキーをセットすることで認証できます。 

The version of the OpenAPI document: 1.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'date'
require 'time'

module FincodeApiClient
  class ContractInfoV2
    # 代表者 姓 形式： 漢字/ひらがな/カタカナ/半角英字 
    attr_accessor :representative_last_name

    # 代表者 姓（カナ）\\ 形式： 全角カナ 
    attr_accessor :representative_last_name_kana

    # 代表者 名\\ 形式： 漢字/ひらがな/カタカナ/半角英字 
    attr_accessor :representative_first_name

    # 代表者 名（カナ）\\ 形式： 全角カナ 
    attr_accessor :representative_first_name_kana

    # 代表者 住所 郵便番号\\ 形式：`xxx-xxxx` 
    attr_accessor :representative_postal_code

    # 代表者 住所 都道府県\\ 形式： 漢字 
    attr_accessor :representative_prefecture

    # 代表者 住所 都道府県（カナ）\\ 形式： 全角カナ 
    attr_accessor :representative_prefecture_kana

    # 代表者 住所 市区町村\\ 形式： 漢字/ひらがな/カタカナ/半角英数 
    attr_accessor :representative_address_municipality

    # 代表者 住所 市区町村（カナ）\\ 形式： 全角カナ 
    attr_accessor :representative_address_municipality_kana

    # 代表者 住所 町域\\ 形式： 漢字/ひらがな/カタカナ/半角英数 
    attr_accessor :representative_address_section

    # 代表者 住所 町域（カナ）\\ 形式： 全角カナ 
    attr_accessor :representative_address_section_kana

    # 代表者 住所 番地\\ 形式： 漢字/ひらがな/カタカナ/半角英数 
    attr_accessor :representative_address_chrome

    # 代表者 住所 番地（カナ） 
    attr_accessor :representative_address_chrome_kana

    # 代表者 住所 建物名\\ 形式： 漢字/ひらがな/カタカナ/半角英数 
    attr_accessor :representative_address_building_name

    # 代表者 住所 建物名（カナ）\\ 形式： 全角カナ 
    attr_accessor :representative_address_building_name_kana

    # 代表者 電話番号\\ 形式： 半角数字（ハイフンなし、PHS番号不可） 
    attr_accessor :representative_tel

    # 代表者 生年月日\\ \\ 形式：`yyyy/MM/dd` 
    attr_accessor :representative_birthday

    # 代表者 性別  - `0`: 男性 - `1`: 女性 
    attr_accessor :representative_gender

    # 担当者1 姓\\ 形式： 漢字/ひらがな/カタカナ/半角英字\\ \\ fincodeは担当者1,2宛てに審査結果の通知や審査保留対応の連絡などを行います。 
    attr_accessor :staff1_last_name

    # 担当者1 姓（カナ）\\ 形式： 全角カナ 
    attr_accessor :staff1_last_name_kana

    # 担当者1 名\\ 形式： 漢字/ひらがな/カタカナ/半角英字 
    attr_accessor :staff1_first_name

    # 担当者1 名（カナ）\\ 形式： 全角カナ 
    attr_accessor :staff1_first_name_kana

    # 担当者1 会社名\\ 形式： 漢字/ひらがな/カタカナ/半角英数 
    attr_accessor :staff1_company_name

    # 担当者1 部署名\\ 形式： 漢字/ひらがな/カタカナ/半角英数 
    attr_accessor :staff1_belongs

    # 担当者1 電話番号\\ 形式： 半角数字（ハイフンなし、PHS番号不可） 
    attr_accessor :staff1_tel

    # 担当者1 メールアドレス\\ 形式： RFC 5322 
    attr_accessor :staff1_mail

    # 担当者2 姓\\ 形式： 漢字/ひらがな/カタカナ/半角英字 
    attr_accessor :staff2_last_name

    # 担当者2 姓（カナ）\\ 形式： 全角カナ 
    attr_accessor :staff2_last_name_kana

    # 担当者2 名\\ 形式： 漢字/ひらがな/カタカナ/半角英字 
    attr_accessor :staff2_first_name

    # 担当者2 名（カナ）\\ 形式： 全角カナ 
    attr_accessor :staff2_first_name_kana

    # 担当者2 会社名\\ 形式： 漢字/ひらがな/カタカナ/半角英数 
    attr_accessor :staff2_company_name

    # 担当者2 部署名\\ 形式： 漢字/ひらがな/カタカナ/半角英数 
    attr_accessor :staff2_belongs

    # 担当者2 電話番号\\ 形式： 半角数字（ハイフンなし、PHS番号不可） 
    attr_accessor :staff2_tel

    # 担当者2 メールアドレス\\ 形式： RFC 5322 
    attr_accessor :staff2_mail

    # 事業形態\\ \\ - `true`: 法人\\ - `false`: 個人事業主 
    attr_accessor :corporate

    attr_accessor :corporate_info

    class EnumAttributeValidator
      attr_reader :datatype
      attr_reader :allowable_values

      def initialize(datatype, allowable_values)
        @allowable_values = allowable_values.map do |value|
          case datatype.to_s
          when /Integer/i
            value.to_i
          when /Float/i
            value.to_f
          else
            value
          end
        end
      end

      def valid?(value)
        !value || allowable_values.include?(value)
      end
    end

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'representative_last_name' => :'representative_last_name',
        :'representative_last_name_kana' => :'representative_last_name_kana',
        :'representative_first_name' => :'representative_first_name',
        :'representative_first_name_kana' => :'representative_first_name_kana',
        :'representative_postal_code' => :'representative_postal_code',
        :'representative_prefecture' => :'representative_prefecture',
        :'representative_prefecture_kana' => :'representative_prefecture_kana',
        :'representative_address_municipality' => :'representative_address_municipality',
        :'representative_address_municipality_kana' => :'representative_address_municipality_kana',
        :'representative_address_section' => :'representative_address_section',
        :'representative_address_section_kana' => :'representative_address_section_kana',
        :'representative_address_chrome' => :'representative_address_chrome',
        :'representative_address_chrome_kana' => :'representative_address_chrome_kana',
        :'representative_address_building_name' => :'representative_address_building_name',
        :'representative_address_building_name_kana' => :'representative_address_building_name_kana',
        :'representative_tel' => :'representative_tel',
        :'representative_birthday' => :'representative_birthday',
        :'representative_gender' => :'representative_gender',
        :'staff1_last_name' => :'staff1_last_name',
        :'staff1_last_name_kana' => :'staff1_last_name_kana',
        :'staff1_first_name' => :'staff1_first_name',
        :'staff1_first_name_kana' => :'staff1_first_name_kana',
        :'staff1_company_name' => :'staff1_company_name',
        :'staff1_belongs' => :'staff1_belongs',
        :'staff1_tel' => :'staff1_tel',
        :'staff1_mail' => :'staff1_mail',
        :'staff2_last_name' => :'staff2_last_name',
        :'staff2_last_name_kana' => :'staff2_last_name_kana',
        :'staff2_first_name' => :'staff2_first_name',
        :'staff2_first_name_kana' => :'staff2_first_name_kana',
        :'staff2_company_name' => :'staff2_company_name',
        :'staff2_belongs' => :'staff2_belongs',
        :'staff2_tel' => :'staff2_tel',
        :'staff2_mail' => :'staff2_mail',
        :'corporate' => :'corporate',
        :'corporate_info' => :'corporate_info'
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'representative_last_name' => :'String',
        :'representative_last_name_kana' => :'String',
        :'representative_first_name' => :'String',
        :'representative_first_name_kana' => :'String',
        :'representative_postal_code' => :'String',
        :'representative_prefecture' => :'String',
        :'representative_prefecture_kana' => :'String',
        :'representative_address_municipality' => :'String',
        :'representative_address_municipality_kana' => :'String',
        :'representative_address_section' => :'String',
        :'representative_address_section_kana' => :'String',
        :'representative_address_chrome' => :'String',
        :'representative_address_chrome_kana' => :'String',
        :'representative_address_building_name' => :'String',
        :'representative_address_building_name_kana' => :'String',
        :'representative_tel' => :'String',
        :'representative_birthday' => :'String',
        :'representative_gender' => :'Integer',
        :'staff1_last_name' => :'String',
        :'staff1_last_name_kana' => :'String',
        :'staff1_first_name' => :'String',
        :'staff1_first_name_kana' => :'String',
        :'staff1_company_name' => :'String',
        :'staff1_belongs' => :'String',
        :'staff1_tel' => :'String',
        :'staff1_mail' => :'String',
        :'staff2_last_name' => :'String',
        :'staff2_last_name_kana' => :'String',
        :'staff2_first_name' => :'String',
        :'staff2_first_name_kana' => :'String',
        :'staff2_company_name' => :'String',
        :'staff2_belongs' => :'String',
        :'staff2_tel' => :'String',
        :'staff2_mail' => :'String',
        :'corporate' => :'Boolean',
        :'corporate_info' => :'ContractInfoV2CorporateInfo'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
        :'representative_last_name',
        :'representative_last_name_kana',
        :'representative_first_name',
        :'representative_first_name_kana',
        :'representative_postal_code',
        :'representative_prefecture',
        :'representative_prefecture_kana',
        :'representative_address_municipality',
        :'representative_address_municipality_kana',
        :'representative_address_section',
        :'representative_address_section_kana',
        :'representative_address_chrome',
        :'representative_address_chrome_kana',
        :'representative_address_building_name',
        :'representative_address_building_name_kana',
        :'representative_tel',
        :'representative_birthday',
        :'representative_gender',
        :'staff1_last_name',
        :'staff1_last_name_kana',
        :'staff1_first_name',
        :'staff1_first_name_kana',
        :'staff1_company_name',
        :'staff1_belongs',
        :'staff1_tel',
        :'staff1_mail',
        :'staff2_last_name',
        :'staff2_last_name_kana',
        :'staff2_first_name',
        :'staff2_first_name_kana',
        :'staff2_company_name',
        :'staff2_belongs',
        :'staff2_tel',
        :'staff2_mail',
        :'corporate',
        :'corporate_info'
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `FincodeApiClient::ContractInfoV2` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `FincodeApiClient::ContractInfoV2`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'representative_last_name')
        self.representative_last_name = attributes[:'representative_last_name']
      else
        self.representative_last_name = nil
      end

      if attributes.key?(:'representative_last_name_kana')
        self.representative_last_name_kana = attributes[:'representative_last_name_kana']
      else
        self.representative_last_name_kana = nil
      end

      if attributes.key?(:'representative_first_name')
        self.representative_first_name = attributes[:'representative_first_name']
      else
        self.representative_first_name = nil
      end

      if attributes.key?(:'representative_first_name_kana')
        self.representative_first_name_kana = attributes[:'representative_first_name_kana']
      else
        self.representative_first_name_kana = nil
      end

      if attributes.key?(:'representative_postal_code')
        self.representative_postal_code = attributes[:'representative_postal_code']
      else
        self.representative_postal_code = nil
      end

      if attributes.key?(:'representative_prefecture')
        self.representative_prefecture = attributes[:'representative_prefecture']
      else
        self.representative_prefecture = nil
      end

      if attributes.key?(:'representative_prefecture_kana')
        self.representative_prefecture_kana = attributes[:'representative_prefecture_kana']
      else
        self.representative_prefecture_kana = nil
      end

      if attributes.key?(:'representative_address_municipality')
        self.representative_address_municipality = attributes[:'representative_address_municipality']
      else
        self.representative_address_municipality = nil
      end

      if attributes.key?(:'representative_address_municipality_kana')
        self.representative_address_municipality_kana = attributes[:'representative_address_municipality_kana']
      else
        self.representative_address_municipality_kana = nil
      end

      if attributes.key?(:'representative_address_section')
        self.representative_address_section = attributes[:'representative_address_section']
      else
        self.representative_address_section = nil
      end

      if attributes.key?(:'representative_address_section_kana')
        self.representative_address_section_kana = attributes[:'representative_address_section_kana']
      else
        self.representative_address_section_kana = nil
      end

      if attributes.key?(:'representative_address_chrome')
        self.representative_address_chrome = attributes[:'representative_address_chrome']
      else
        self.representative_address_chrome = nil
      end

      if attributes.key?(:'representative_address_chrome_kana')
        self.representative_address_chrome_kana = attributes[:'representative_address_chrome_kana']
      else
        self.representative_address_chrome_kana = nil
      end

      if attributes.key?(:'representative_address_building_name')
        self.representative_address_building_name = attributes[:'representative_address_building_name']
      end

      if attributes.key?(:'representative_address_building_name_kana')
        self.representative_address_building_name_kana = attributes[:'representative_address_building_name_kana']
      end

      if attributes.key?(:'representative_tel')
        self.representative_tel = attributes[:'representative_tel']
      else
        self.representative_tel = nil
      end

      if attributes.key?(:'representative_birthday')
        self.representative_birthday = attributes[:'representative_birthday']
      else
        self.representative_birthday = nil
      end

      if attributes.key?(:'representative_gender')
        self.representative_gender = attributes[:'representative_gender']
      else
        self.representative_gender = nil
      end

      if attributes.key?(:'staff1_last_name')
        self.staff1_last_name = attributes[:'staff1_last_name']
      else
        self.staff1_last_name = nil
      end

      if attributes.key?(:'staff1_last_name_kana')
        self.staff1_last_name_kana = attributes[:'staff1_last_name_kana']
      else
        self.staff1_last_name_kana = nil
      end

      if attributes.key?(:'staff1_first_name')
        self.staff1_first_name = attributes[:'staff1_first_name']
      else
        self.staff1_first_name = nil
      end

      if attributes.key?(:'staff1_first_name_kana')
        self.staff1_first_name_kana = attributes[:'staff1_first_name_kana']
      else
        self.staff1_first_name_kana = nil
      end

      if attributes.key?(:'staff1_company_name')
        self.staff1_company_name = attributes[:'staff1_company_name']
      else
        self.staff1_company_name = nil
      end

      if attributes.key?(:'staff1_belongs')
        self.staff1_belongs = attributes[:'staff1_belongs']
      else
        self.staff1_belongs = nil
      end

      if attributes.key?(:'staff1_tel')
        self.staff1_tel = attributes[:'staff1_tel']
      else
        self.staff1_tel = nil
      end

      if attributes.key?(:'staff1_mail')
        self.staff1_mail = attributes[:'staff1_mail']
      else
        self.staff1_mail = nil
      end

      if attributes.key?(:'staff2_last_name')
        self.staff2_last_name = attributes[:'staff2_last_name']
      end

      if attributes.key?(:'staff2_last_name_kana')
        self.staff2_last_name_kana = attributes[:'staff2_last_name_kana']
      end

      if attributes.key?(:'staff2_first_name')
        self.staff2_first_name = attributes[:'staff2_first_name']
      end

      if attributes.key?(:'staff2_first_name_kana')
        self.staff2_first_name_kana = attributes[:'staff2_first_name_kana']
      end

      if attributes.key?(:'staff2_company_name')
        self.staff2_company_name = attributes[:'staff2_company_name']
      end

      if attributes.key?(:'staff2_belongs')
        self.staff2_belongs = attributes[:'staff2_belongs']
      end

      if attributes.key?(:'staff2_tel')
        self.staff2_tel = attributes[:'staff2_tel']
      end

      if attributes.key?(:'staff2_mail')
        self.staff2_mail = attributes[:'staff2_mail']
      end

      if attributes.key?(:'corporate')
        self.corporate = attributes[:'corporate']
      else
        self.corporate = nil
      end

      if attributes.key?(:'corporate_info')
        self.corporate_info = attributes[:'corporate_info']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      warn '[DEPRECATED] the `list_invalid_properties` method is obsolete'
      invalid_properties = Array.new
      if @representative_last_name.to_s.length > 20
        invalid_properties.push('invalid value for "representative_last_name", the character length must be smaller than or equal to 20.')
      end

      if @representative_last_name.to_s.length < 1
        invalid_properties.push('invalid value for "representative_last_name", the character length must be great than or equal to 1.')
      end

      if @representative_last_name_kana.to_s.length > 20
        invalid_properties.push('invalid value for "representative_last_name_kana", the character length must be smaller than or equal to 20.')
      end

      if @representative_last_name_kana.to_s.length < 1
        invalid_properties.push('invalid value for "representative_last_name_kana", the character length must be great than or equal to 1.')
      end

      if @representative_first_name.to_s.length > 20
        invalid_properties.push('invalid value for "representative_first_name", the character length must be smaller than or equal to 20.')
      end

      if @representative_first_name.to_s.length < 1
        invalid_properties.push('invalid value for "representative_first_name", the character length must be great than or equal to 1.')
      end

      if @representative_first_name_kana.to_s.length > 20
        invalid_properties.push('invalid value for "representative_first_name_kana", the character length must be smaller than or equal to 20.')
      end

      if @representative_first_name_kana.to_s.length < 1
        invalid_properties.push('invalid value for "representative_first_name_kana", the character length must be great than or equal to 1.')
      end

      if @representative_postal_code.to_s.length > 8
        invalid_properties.push('invalid value for "representative_postal_code", the character length must be smaller than or equal to 8.')
      end

      if @representative_postal_code.to_s.length < 8
        invalid_properties.push('invalid value for "representative_postal_code", the character length must be great than or equal to 8.')
      end

      pattern = Regexp.new(/^\d{3}-\d{4}$/)
      if @representative_postal_code !~ pattern
        invalid_properties.push("invalid value for \"representative_postal_code\", must conform to the pattern #{pattern}.")
      end

      if @representative_prefecture.to_s.length > 4
        invalid_properties.push('invalid value for "representative_prefecture", the character length must be smaller than or equal to 4.')
      end

      if @representative_prefecture.to_s.length < 1
        invalid_properties.push('invalid value for "representative_prefecture", the character length must be great than or equal to 1.')
      end

      if @representative_prefecture_kana.to_s.length > 6
        invalid_properties.push('invalid value for "representative_prefecture_kana", the character length must be smaller than or equal to 6.')
      end

      if @representative_prefecture_kana.to_s.length < 1
        invalid_properties.push('invalid value for "representative_prefecture_kana", the character length must be great than or equal to 1.')
      end

      if @representative_address_municipality.to_s.length > 50
        invalid_properties.push('invalid value for "representative_address_municipality", the character length must be smaller than or equal to 50.')
      end

      if @representative_address_municipality.to_s.length < 1
        invalid_properties.push('invalid value for "representative_address_municipality", the character length must be great than or equal to 1.')
      end

      if @representative_address_municipality_kana.to_s.length > 100
        invalid_properties.push('invalid value for "representative_address_municipality_kana", the character length must be smaller than or equal to 100.')
      end

      if @representative_address_municipality_kana.to_s.length < 1
        invalid_properties.push('invalid value for "representative_address_municipality_kana", the character length must be great than or equal to 1.')
      end

      if @representative_address_section.to_s.length > 50
        invalid_properties.push('invalid value for "representative_address_section", the character length must be smaller than or equal to 50.')
      end

      if @representative_address_section.to_s.length < 1
        invalid_properties.push('invalid value for "representative_address_section", the character length must be great than or equal to 1.')
      end

      if @representative_address_section_kana.to_s.length > 100
        invalid_properties.push('invalid value for "representative_address_section_kana", the character length must be smaller than or equal to 100.')
      end

      if @representative_address_section_kana.to_s.length < 1
        invalid_properties.push('invalid value for "representative_address_section_kana", the character length must be great than or equal to 1.')
      end

      if @representative_address_chrome.to_s.length > 50
        invalid_properties.push('invalid value for "representative_address_chrome", the character length must be smaller than or equal to 50.')
      end

      if @representative_address_chrome.to_s.length < 1
        invalid_properties.push('invalid value for "representative_address_chrome", the character length must be great than or equal to 1.')
      end

      if @representative_address_chrome_kana.to_s.length > 100
        invalid_properties.push('invalid value for "representative_address_chrome_kana", the character length must be smaller than or equal to 100.')
      end

      if @representative_address_chrome_kana.to_s.length < 1
        invalid_properties.push('invalid value for "representative_address_chrome_kana", the character length must be great than or equal to 1.')
      end

      if !@representative_address_building_name.nil? && @representative_address_building_name.to_s.length > 100
        invalid_properties.push('invalid value for "representative_address_building_name", the character length must be smaller than or equal to 100.')
      end

      if !@representative_address_building_name.nil? && @representative_address_building_name.to_s.length < 1
        invalid_properties.push('invalid value for "representative_address_building_name", the character length must be great than or equal to 1.')
      end

      if !@representative_address_building_name_kana.nil? && @representative_address_building_name_kana.to_s.length > 100
        invalid_properties.push('invalid value for "representative_address_building_name_kana", the character length must be smaller than or equal to 100.')
      end

      if !@representative_address_building_name_kana.nil? && @representative_address_building_name_kana.to_s.length < 1
        invalid_properties.push('invalid value for "representative_address_building_name_kana", the character length must be great than or equal to 1.')
      end

      if @representative_tel.to_s.length > 12
        invalid_properties.push('invalid value for "representative_tel", the character length must be smaller than or equal to 12.')
      end

      if @representative_tel.to_s.length < 11
        invalid_properties.push('invalid value for "representative_tel", the character length must be great than or equal to 11.')
      end

      pattern = Regexp.new(/^\d{11,12}$/)
      if @representative_tel !~ pattern
        invalid_properties.push("invalid value for \"representative_tel\", must conform to the pattern #{pattern}.")
      end

      pattern = Regexp.new(/^\d{4}\/\d{2}\/\d{2}$/)
      if @representative_birthday !~ pattern
        invalid_properties.push("invalid value for \"representative_birthday\", must conform to the pattern #{pattern}.")
      end

      if @staff1_last_name.to_s.length > 20
        invalid_properties.push('invalid value for "staff1_last_name", the character length must be smaller than or equal to 20.')
      end

      if @staff1_last_name.to_s.length < 1
        invalid_properties.push('invalid value for "staff1_last_name", the character length must be great than or equal to 1.')
      end

      if @staff1_last_name_kana.to_s.length > 20
        invalid_properties.push('invalid value for "staff1_last_name_kana", the character length must be smaller than or equal to 20.')
      end

      if @staff1_last_name_kana.to_s.length < 1
        invalid_properties.push('invalid value for "staff1_last_name_kana", the character length must be great than or equal to 1.')
      end

      if @staff1_first_name.to_s.length > 20
        invalid_properties.push('invalid value for "staff1_first_name", the character length must be smaller than or equal to 20.')
      end

      if @staff1_first_name.to_s.length < 1
        invalid_properties.push('invalid value for "staff1_first_name", the character length must be great than or equal to 1.')
      end

      if @staff1_first_name_kana.to_s.length > 20
        invalid_properties.push('invalid value for "staff1_first_name_kana", the character length must be smaller than or equal to 20.')
      end

      if @staff1_first_name_kana.to_s.length < 1
        invalid_properties.push('invalid value for "staff1_first_name_kana", the character length must be great than or equal to 1.')
      end

      if @staff1_company_name.to_s.length > 150
        invalid_properties.push('invalid value for "staff1_company_name", the character length must be smaller than or equal to 150.')
      end

      if @staff1_company_name.to_s.length < 1
        invalid_properties.push('invalid value for "staff1_company_name", the character length must be great than or equal to 1.')
      end

      if @staff1_belongs.to_s.length > 50
        invalid_properties.push('invalid value for "staff1_belongs", the character length must be smaller than or equal to 50.')
      end

      if @staff1_belongs.to_s.length < 1
        invalid_properties.push('invalid value for "staff1_belongs", the character length must be great than or equal to 1.')
      end

      if @staff1_tel.to_s.length > 12
        invalid_properties.push('invalid value for "staff1_tel", the character length must be smaller than or equal to 12.')
      end

      if @staff1_tel.to_s.length < 11
        invalid_properties.push('invalid value for "staff1_tel", the character length must be great than or equal to 11.')
      end

      pattern = Regexp.new(/^\d{11,12}$/)
      if @staff1_tel !~ pattern
        invalid_properties.push("invalid value for \"staff1_tel\", must conform to the pattern #{pattern}.")
      end

      if @staff1_mail.to_s.length > 254
        invalid_properties.push('invalid value for "staff1_mail", the character length must be smaller than or equal to 254.')
      end

      if @staff1_mail.to_s.length < 1
        invalid_properties.push('invalid value for "staff1_mail", the character length must be great than or equal to 1.')
      end

      if !@staff2_last_name.nil? && @staff2_last_name.to_s.length > 20
        invalid_properties.push('invalid value for "staff2_last_name", the character length must be smaller than or equal to 20.')
      end

      if !@staff2_last_name.nil? && @staff2_last_name.to_s.length < 1
        invalid_properties.push('invalid value for "staff2_last_name", the character length must be great than or equal to 1.')
      end

      if !@staff2_last_name_kana.nil? && @staff2_last_name_kana.to_s.length > 20
        invalid_properties.push('invalid value for "staff2_last_name_kana", the character length must be smaller than or equal to 20.')
      end

      if !@staff2_last_name_kana.nil? && @staff2_last_name_kana.to_s.length < 1
        invalid_properties.push('invalid value for "staff2_last_name_kana", the character length must be great than or equal to 1.')
      end

      if !@staff2_first_name.nil? && @staff2_first_name.to_s.length > 20
        invalid_properties.push('invalid value for "staff2_first_name", the character length must be smaller than or equal to 20.')
      end

      if !@staff2_first_name.nil? && @staff2_first_name.to_s.length < 1
        invalid_properties.push('invalid value for "staff2_first_name", the character length must be great than or equal to 1.')
      end

      if !@staff2_first_name_kana.nil? && @staff2_first_name_kana.to_s.length > 20
        invalid_properties.push('invalid value for "staff2_first_name_kana", the character length must be smaller than or equal to 20.')
      end

      if !@staff2_first_name_kana.nil? && @staff2_first_name_kana.to_s.length < 1
        invalid_properties.push('invalid value for "staff2_first_name_kana", the character length must be great than or equal to 1.')
      end

      if !@staff2_company_name.nil? && @staff2_company_name.to_s.length > 150
        invalid_properties.push('invalid value for "staff2_company_name", the character length must be smaller than or equal to 150.')
      end

      if !@staff2_company_name.nil? && @staff2_company_name.to_s.length < 1
        invalid_properties.push('invalid value for "staff2_company_name", the character length must be great than or equal to 1.')
      end

      if !@staff2_belongs.nil? && @staff2_belongs.to_s.length > 50
        invalid_properties.push('invalid value for "staff2_belongs", the character length must be smaller than or equal to 50.')
      end

      if !@staff2_belongs.nil? && @staff2_belongs.to_s.length < 1
        invalid_properties.push('invalid value for "staff2_belongs", the character length must be great than or equal to 1.')
      end

      if !@staff2_tel.nil? && @staff2_tel.to_s.length > 12
        invalid_properties.push('invalid value for "staff2_tel", the character length must be smaller than or equal to 12.')
      end

      if !@staff2_tel.nil? && @staff2_tel.to_s.length < 11
        invalid_properties.push('invalid value for "staff2_tel", the character length must be great than or equal to 11.')
      end

      pattern = Regexp.new(/^\d{11,12}$/)
      if !@staff2_tel.nil? && @staff2_tel !~ pattern
        invalid_properties.push("invalid value for \"staff2_tel\", must conform to the pattern #{pattern}.")
      end

      if !@staff2_mail.nil? && @staff2_mail.to_s.length > 254
        invalid_properties.push('invalid value for "staff2_mail", the character length must be smaller than or equal to 254.')
      end

      if !@staff2_mail.nil? && @staff2_mail.to_s.length < 1
        invalid_properties.push('invalid value for "staff2_mail", the character length must be great than or equal to 1.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      warn '[DEPRECATED] the `valid?` method is obsolete'
      return false if @representative_last_name.to_s.length > 20
      return false if @representative_last_name.to_s.length < 1
      return false if @representative_last_name_kana.to_s.length > 20
      return false if @representative_last_name_kana.to_s.length < 1
      return false if @representative_first_name.to_s.length > 20
      return false if @representative_first_name.to_s.length < 1
      return false if @representative_first_name_kana.to_s.length > 20
      return false if @representative_first_name_kana.to_s.length < 1
      return false if @representative_postal_code.to_s.length > 8
      return false if @representative_postal_code.to_s.length < 8
      return false if @representative_postal_code !~ Regexp.new(/^\d{3}-\d{4}$/)
      return false if @representative_prefecture.to_s.length > 4
      return false if @representative_prefecture.to_s.length < 1
      return false if @representative_prefecture_kana.to_s.length > 6
      return false if @representative_prefecture_kana.to_s.length < 1
      return false if @representative_address_municipality.to_s.length > 50
      return false if @representative_address_municipality.to_s.length < 1
      return false if @representative_address_municipality_kana.to_s.length > 100
      return false if @representative_address_municipality_kana.to_s.length < 1
      return false if @representative_address_section.to_s.length > 50
      return false if @representative_address_section.to_s.length < 1
      return false if @representative_address_section_kana.to_s.length > 100
      return false if @representative_address_section_kana.to_s.length < 1
      return false if @representative_address_chrome.to_s.length > 50
      return false if @representative_address_chrome.to_s.length < 1
      return false if @representative_address_chrome_kana.to_s.length > 100
      return false if @representative_address_chrome_kana.to_s.length < 1
      return false if !@representative_address_building_name.nil? && @representative_address_building_name.to_s.length > 100
      return false if !@representative_address_building_name.nil? && @representative_address_building_name.to_s.length < 1
      return false if !@representative_address_building_name_kana.nil? && @representative_address_building_name_kana.to_s.length > 100
      return false if !@representative_address_building_name_kana.nil? && @representative_address_building_name_kana.to_s.length < 1
      return false if @representative_tel.to_s.length > 12
      return false if @representative_tel.to_s.length < 11
      return false if @representative_tel !~ Regexp.new(/^\d{11,12}$/)
      return false if @representative_birthday !~ Regexp.new(/^\d{4}\/\d{2}\/\d{2}$/)
      representative_gender_validator = EnumAttributeValidator.new('Integer', [0, 1])
      return false unless representative_gender_validator.valid?(@representative_gender)
      return false if @staff1_last_name.to_s.length > 20
      return false if @staff1_last_name.to_s.length < 1
      return false if @staff1_last_name_kana.to_s.length > 20
      return false if @staff1_last_name_kana.to_s.length < 1
      return false if @staff1_first_name.to_s.length > 20
      return false if @staff1_first_name.to_s.length < 1
      return false if @staff1_first_name_kana.to_s.length > 20
      return false if @staff1_first_name_kana.to_s.length < 1
      return false if @staff1_company_name.to_s.length > 150
      return false if @staff1_company_name.to_s.length < 1
      return false if @staff1_belongs.to_s.length > 50
      return false if @staff1_belongs.to_s.length < 1
      return false if @staff1_tel.to_s.length > 12
      return false if @staff1_tel.to_s.length < 11
      return false if @staff1_tel !~ Regexp.new(/^\d{11,12}$/)
      return false if @staff1_mail.to_s.length > 254
      return false if @staff1_mail.to_s.length < 1
      return false if !@staff2_last_name.nil? && @staff2_last_name.to_s.length > 20
      return false if !@staff2_last_name.nil? && @staff2_last_name.to_s.length < 1
      return false if !@staff2_last_name_kana.nil? && @staff2_last_name_kana.to_s.length > 20
      return false if !@staff2_last_name_kana.nil? && @staff2_last_name_kana.to_s.length < 1
      return false if !@staff2_first_name.nil? && @staff2_first_name.to_s.length > 20
      return false if !@staff2_first_name.nil? && @staff2_first_name.to_s.length < 1
      return false if !@staff2_first_name_kana.nil? && @staff2_first_name_kana.to_s.length > 20
      return false if !@staff2_first_name_kana.nil? && @staff2_first_name_kana.to_s.length < 1
      return false if !@staff2_company_name.nil? && @staff2_company_name.to_s.length > 150
      return false if !@staff2_company_name.nil? && @staff2_company_name.to_s.length < 1
      return false if !@staff2_belongs.nil? && @staff2_belongs.to_s.length > 50
      return false if !@staff2_belongs.nil? && @staff2_belongs.to_s.length < 1
      return false if !@staff2_tel.nil? && @staff2_tel.to_s.length > 12
      return false if !@staff2_tel.nil? && @staff2_tel.to_s.length < 11
      return false if !@staff2_tel.nil? && @staff2_tel !~ Regexp.new(/^\d{11,12}$/)
      return false if !@staff2_mail.nil? && @staff2_mail.to_s.length > 254
      return false if !@staff2_mail.nil? && @staff2_mail.to_s.length < 1
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_last_name Value to be assigned
    def representative_last_name=(representative_last_name)
      if !representative_last_name.nil? && representative_last_name.to_s.length > 20
        fail ArgumentError, 'invalid value for "representative_last_name", the character length must be smaller than or equal to 20.'
      end

      if !representative_last_name.nil? && representative_last_name.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_last_name", the character length must be great than or equal to 1.'
      end

      @representative_last_name = representative_last_name
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_last_name_kana Value to be assigned
    def representative_last_name_kana=(representative_last_name_kana)
      if !representative_last_name_kana.nil? && representative_last_name_kana.to_s.length > 20
        fail ArgumentError, 'invalid value for "representative_last_name_kana", the character length must be smaller than or equal to 20.'
      end

      if !representative_last_name_kana.nil? && representative_last_name_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_last_name_kana", the character length must be great than or equal to 1.'
      end

      @representative_last_name_kana = representative_last_name_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_first_name Value to be assigned
    def representative_first_name=(representative_first_name)
      if !representative_first_name.nil? && representative_first_name.to_s.length > 20
        fail ArgumentError, 'invalid value for "representative_first_name", the character length must be smaller than or equal to 20.'
      end

      if !representative_first_name.nil? && representative_first_name.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_first_name", the character length must be great than or equal to 1.'
      end

      @representative_first_name = representative_first_name
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_first_name_kana Value to be assigned
    def representative_first_name_kana=(representative_first_name_kana)
      if !representative_first_name_kana.nil? && representative_first_name_kana.to_s.length > 20
        fail ArgumentError, 'invalid value for "representative_first_name_kana", the character length must be smaller than or equal to 20.'
      end

      if !representative_first_name_kana.nil? && representative_first_name_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_first_name_kana", the character length must be great than or equal to 1.'
      end

      @representative_first_name_kana = representative_first_name_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_postal_code Value to be assigned
    def representative_postal_code=(representative_postal_code)
      if !representative_postal_code.nil? && representative_postal_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "representative_postal_code", the character length must be smaller than or equal to 8.'
      end

      if !representative_postal_code.nil? && representative_postal_code.to_s.length < 8
        fail ArgumentError, 'invalid value for "representative_postal_code", the character length must be great than or equal to 8.'
      end

      pattern = Regexp.new(/^\d{3}-\d{4}$/)
      if !representative_postal_code.nil? && representative_postal_code !~ pattern
        fail ArgumentError, "invalid value for \"representative_postal_code\", must conform to the pattern #{pattern}."
      end

      @representative_postal_code = representative_postal_code
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_prefecture Value to be assigned
    def representative_prefecture=(representative_prefecture)
      if !representative_prefecture.nil? && representative_prefecture.to_s.length > 4
        fail ArgumentError, 'invalid value for "representative_prefecture", the character length must be smaller than or equal to 4.'
      end

      if !representative_prefecture.nil? && representative_prefecture.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_prefecture", the character length must be great than or equal to 1.'
      end

      @representative_prefecture = representative_prefecture
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_prefecture_kana Value to be assigned
    def representative_prefecture_kana=(representative_prefecture_kana)
      if !representative_prefecture_kana.nil? && representative_prefecture_kana.to_s.length > 6
        fail ArgumentError, 'invalid value for "representative_prefecture_kana", the character length must be smaller than or equal to 6.'
      end

      if !representative_prefecture_kana.nil? && representative_prefecture_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_prefecture_kana", the character length must be great than or equal to 1.'
      end

      @representative_prefecture_kana = representative_prefecture_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_address_municipality Value to be assigned
    def representative_address_municipality=(representative_address_municipality)
      if !representative_address_municipality.nil? && representative_address_municipality.to_s.length > 50
        fail ArgumentError, 'invalid value for "representative_address_municipality", the character length must be smaller than or equal to 50.'
      end

      if !representative_address_municipality.nil? && representative_address_municipality.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_address_municipality", the character length must be great than or equal to 1.'
      end

      @representative_address_municipality = representative_address_municipality
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_address_municipality_kana Value to be assigned
    def representative_address_municipality_kana=(representative_address_municipality_kana)
      if !representative_address_municipality_kana.nil? && representative_address_municipality_kana.to_s.length > 100
        fail ArgumentError, 'invalid value for "representative_address_municipality_kana", the character length must be smaller than or equal to 100.'
      end

      if !representative_address_municipality_kana.nil? && representative_address_municipality_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_address_municipality_kana", the character length must be great than or equal to 1.'
      end

      @representative_address_municipality_kana = representative_address_municipality_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_address_section Value to be assigned
    def representative_address_section=(representative_address_section)
      if !representative_address_section.nil? && representative_address_section.to_s.length > 50
        fail ArgumentError, 'invalid value for "representative_address_section", the character length must be smaller than or equal to 50.'
      end

      if !representative_address_section.nil? && representative_address_section.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_address_section", the character length must be great than or equal to 1.'
      end

      @representative_address_section = representative_address_section
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_address_section_kana Value to be assigned
    def representative_address_section_kana=(representative_address_section_kana)
      if !representative_address_section_kana.nil? && representative_address_section_kana.to_s.length > 100
        fail ArgumentError, 'invalid value for "representative_address_section_kana", the character length must be smaller than or equal to 100.'
      end

      if !representative_address_section_kana.nil? && representative_address_section_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_address_section_kana", the character length must be great than or equal to 1.'
      end

      @representative_address_section_kana = representative_address_section_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_address_chrome Value to be assigned
    def representative_address_chrome=(representative_address_chrome)
      if !representative_address_chrome.nil? && representative_address_chrome.to_s.length > 50
        fail ArgumentError, 'invalid value for "representative_address_chrome", the character length must be smaller than or equal to 50.'
      end

      if !representative_address_chrome.nil? && representative_address_chrome.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_address_chrome", the character length must be great than or equal to 1.'
      end

      @representative_address_chrome = representative_address_chrome
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_address_chrome_kana Value to be assigned
    def representative_address_chrome_kana=(representative_address_chrome_kana)
      if !representative_address_chrome_kana.nil? && representative_address_chrome_kana.to_s.length > 100
        fail ArgumentError, 'invalid value for "representative_address_chrome_kana", the character length must be smaller than or equal to 100.'
      end

      if !representative_address_chrome_kana.nil? && representative_address_chrome_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_address_chrome_kana", the character length must be great than or equal to 1.'
      end

      @representative_address_chrome_kana = representative_address_chrome_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_address_building_name Value to be assigned
    def representative_address_building_name=(representative_address_building_name)
      if !representative_address_building_name.nil? && representative_address_building_name.to_s.length > 100
        fail ArgumentError, 'invalid value for "representative_address_building_name", the character length must be smaller than or equal to 100.'
      end

      if !representative_address_building_name.nil? && representative_address_building_name.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_address_building_name", the character length must be great than or equal to 1.'
      end

      @representative_address_building_name = representative_address_building_name
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_address_building_name_kana Value to be assigned
    def representative_address_building_name_kana=(representative_address_building_name_kana)
      if !representative_address_building_name_kana.nil? && representative_address_building_name_kana.to_s.length > 100
        fail ArgumentError, 'invalid value for "representative_address_building_name_kana", the character length must be smaller than or equal to 100.'
      end

      if !representative_address_building_name_kana.nil? && representative_address_building_name_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "representative_address_building_name_kana", the character length must be great than or equal to 1.'
      end

      @representative_address_building_name_kana = representative_address_building_name_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_tel Value to be assigned
    def representative_tel=(representative_tel)
      if !representative_tel.nil? && representative_tel.to_s.length > 12
        fail ArgumentError, 'invalid value for "representative_tel", the character length must be smaller than or equal to 12.'
      end

      if !representative_tel.nil? && representative_tel.to_s.length < 11
        fail ArgumentError, 'invalid value for "representative_tel", the character length must be great than or equal to 11.'
      end

      pattern = Regexp.new(/^\d{11,12}$/)
      if !representative_tel.nil? && representative_tel !~ pattern
        fail ArgumentError, "invalid value for \"representative_tel\", must conform to the pattern #{pattern}."
      end

      @representative_tel = representative_tel
    end

    # Custom attribute writer method with validation
    # @param [Object] representative_birthday Value to be assigned
    def representative_birthday=(representative_birthday)
      pattern = Regexp.new(/^\d{4}\/\d{2}\/\d{2}$/)
      if !representative_birthday.nil? && representative_birthday !~ pattern
        fail ArgumentError, "invalid value for \"representative_birthday\", must conform to the pattern #{pattern}."
      end

      @representative_birthday = representative_birthday
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] representative_gender Object to be assigned
    def representative_gender=(representative_gender)
      validator = EnumAttributeValidator.new('Integer', [0, 1])
      unless validator.valid?(representative_gender)
        fail ArgumentError, "invalid value for \"representative_gender\", must be one of #{validator.allowable_values}."
      end
      @representative_gender = representative_gender
    end

    # Custom attribute writer method with validation
    # @param [Object] staff1_last_name Value to be assigned
    def staff1_last_name=(staff1_last_name)
      if !staff1_last_name.nil? && staff1_last_name.to_s.length > 20
        fail ArgumentError, 'invalid value for "staff1_last_name", the character length must be smaller than or equal to 20.'
      end

      if !staff1_last_name.nil? && staff1_last_name.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff1_last_name", the character length must be great than or equal to 1.'
      end

      @staff1_last_name = staff1_last_name
    end

    # Custom attribute writer method with validation
    # @param [Object] staff1_last_name_kana Value to be assigned
    def staff1_last_name_kana=(staff1_last_name_kana)
      if !staff1_last_name_kana.nil? && staff1_last_name_kana.to_s.length > 20
        fail ArgumentError, 'invalid value for "staff1_last_name_kana", the character length must be smaller than or equal to 20.'
      end

      if !staff1_last_name_kana.nil? && staff1_last_name_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff1_last_name_kana", the character length must be great than or equal to 1.'
      end

      @staff1_last_name_kana = staff1_last_name_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] staff1_first_name Value to be assigned
    def staff1_first_name=(staff1_first_name)
      if !staff1_first_name.nil? && staff1_first_name.to_s.length > 20
        fail ArgumentError, 'invalid value for "staff1_first_name", the character length must be smaller than or equal to 20.'
      end

      if !staff1_first_name.nil? && staff1_first_name.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff1_first_name", the character length must be great than or equal to 1.'
      end

      @staff1_first_name = staff1_first_name
    end

    # Custom attribute writer method with validation
    # @param [Object] staff1_first_name_kana Value to be assigned
    def staff1_first_name_kana=(staff1_first_name_kana)
      if !staff1_first_name_kana.nil? && staff1_first_name_kana.to_s.length > 20
        fail ArgumentError, 'invalid value for "staff1_first_name_kana", the character length must be smaller than or equal to 20.'
      end

      if !staff1_first_name_kana.nil? && staff1_first_name_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff1_first_name_kana", the character length must be great than or equal to 1.'
      end

      @staff1_first_name_kana = staff1_first_name_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] staff1_company_name Value to be assigned
    def staff1_company_name=(staff1_company_name)
      if !staff1_company_name.nil? && staff1_company_name.to_s.length > 150
        fail ArgumentError, 'invalid value for "staff1_company_name", the character length must be smaller than or equal to 150.'
      end

      if !staff1_company_name.nil? && staff1_company_name.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff1_company_name", the character length must be great than or equal to 1.'
      end

      @staff1_company_name = staff1_company_name
    end

    # Custom attribute writer method with validation
    # @param [Object] staff1_belongs Value to be assigned
    def staff1_belongs=(staff1_belongs)
      if !staff1_belongs.nil? && staff1_belongs.to_s.length > 50
        fail ArgumentError, 'invalid value for "staff1_belongs", the character length must be smaller than or equal to 50.'
      end

      if !staff1_belongs.nil? && staff1_belongs.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff1_belongs", the character length must be great than or equal to 1.'
      end

      @staff1_belongs = staff1_belongs
    end

    # Custom attribute writer method with validation
    # @param [Object] staff1_tel Value to be assigned
    def staff1_tel=(staff1_tel)
      if !staff1_tel.nil? && staff1_tel.to_s.length > 12
        fail ArgumentError, 'invalid value for "staff1_tel", the character length must be smaller than or equal to 12.'
      end

      if !staff1_tel.nil? && staff1_tel.to_s.length < 11
        fail ArgumentError, 'invalid value for "staff1_tel", the character length must be great than or equal to 11.'
      end

      pattern = Regexp.new(/^\d{11,12}$/)
      if !staff1_tel.nil? && staff1_tel !~ pattern
        fail ArgumentError, "invalid value for \"staff1_tel\", must conform to the pattern #{pattern}."
      end

      @staff1_tel = staff1_tel
    end

    # Custom attribute writer method with validation
    # @param [Object] staff1_mail Value to be assigned
    def staff1_mail=(staff1_mail)
      if !staff1_mail.nil? && staff1_mail.to_s.length > 254
        fail ArgumentError, 'invalid value for "staff1_mail", the character length must be smaller than or equal to 254.'
      end

      if !staff1_mail.nil? && staff1_mail.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff1_mail", the character length must be great than or equal to 1.'
      end

      @staff1_mail = staff1_mail
    end

    # Custom attribute writer method with validation
    # @param [Object] staff2_last_name Value to be assigned
    def staff2_last_name=(staff2_last_name)
      if !staff2_last_name.nil? && staff2_last_name.to_s.length > 20
        fail ArgumentError, 'invalid value for "staff2_last_name", the character length must be smaller than or equal to 20.'
      end

      if !staff2_last_name.nil? && staff2_last_name.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff2_last_name", the character length must be great than or equal to 1.'
      end

      @staff2_last_name = staff2_last_name
    end

    # Custom attribute writer method with validation
    # @param [Object] staff2_last_name_kana Value to be assigned
    def staff2_last_name_kana=(staff2_last_name_kana)
      if !staff2_last_name_kana.nil? && staff2_last_name_kana.to_s.length > 20
        fail ArgumentError, 'invalid value for "staff2_last_name_kana", the character length must be smaller than or equal to 20.'
      end

      if !staff2_last_name_kana.nil? && staff2_last_name_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff2_last_name_kana", the character length must be great than or equal to 1.'
      end

      @staff2_last_name_kana = staff2_last_name_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] staff2_first_name Value to be assigned
    def staff2_first_name=(staff2_first_name)
      if !staff2_first_name.nil? && staff2_first_name.to_s.length > 20
        fail ArgumentError, 'invalid value for "staff2_first_name", the character length must be smaller than or equal to 20.'
      end

      if !staff2_first_name.nil? && staff2_first_name.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff2_first_name", the character length must be great than or equal to 1.'
      end

      @staff2_first_name = staff2_first_name
    end

    # Custom attribute writer method with validation
    # @param [Object] staff2_first_name_kana Value to be assigned
    def staff2_first_name_kana=(staff2_first_name_kana)
      if !staff2_first_name_kana.nil? && staff2_first_name_kana.to_s.length > 20
        fail ArgumentError, 'invalid value for "staff2_first_name_kana", the character length must be smaller than or equal to 20.'
      end

      if !staff2_first_name_kana.nil? && staff2_first_name_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff2_first_name_kana", the character length must be great than or equal to 1.'
      end

      @staff2_first_name_kana = staff2_first_name_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] staff2_company_name Value to be assigned
    def staff2_company_name=(staff2_company_name)
      if !staff2_company_name.nil? && staff2_company_name.to_s.length > 150
        fail ArgumentError, 'invalid value for "staff2_company_name", the character length must be smaller than or equal to 150.'
      end

      if !staff2_company_name.nil? && staff2_company_name.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff2_company_name", the character length must be great than or equal to 1.'
      end

      @staff2_company_name = staff2_company_name
    end

    # Custom attribute writer method with validation
    # @param [Object] staff2_belongs Value to be assigned
    def staff2_belongs=(staff2_belongs)
      if !staff2_belongs.nil? && staff2_belongs.to_s.length > 50
        fail ArgumentError, 'invalid value for "staff2_belongs", the character length must be smaller than or equal to 50.'
      end

      if !staff2_belongs.nil? && staff2_belongs.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff2_belongs", the character length must be great than or equal to 1.'
      end

      @staff2_belongs = staff2_belongs
    end

    # Custom attribute writer method with validation
    # @param [Object] staff2_tel Value to be assigned
    def staff2_tel=(staff2_tel)
      if !staff2_tel.nil? && staff2_tel.to_s.length > 12
        fail ArgumentError, 'invalid value for "staff2_tel", the character length must be smaller than or equal to 12.'
      end

      if !staff2_tel.nil? && staff2_tel.to_s.length < 11
        fail ArgumentError, 'invalid value for "staff2_tel", the character length must be great than or equal to 11.'
      end

      pattern = Regexp.new(/^\d{11,12}$/)
      if !staff2_tel.nil? && staff2_tel !~ pattern
        fail ArgumentError, "invalid value for \"staff2_tel\", must conform to the pattern #{pattern}."
      end

      @staff2_tel = staff2_tel
    end

    # Custom attribute writer method with validation
    # @param [Object] staff2_mail Value to be assigned
    def staff2_mail=(staff2_mail)
      if !staff2_mail.nil? && staff2_mail.to_s.length > 254
        fail ArgumentError, 'invalid value for "staff2_mail", the character length must be smaller than or equal to 254.'
      end

      if !staff2_mail.nil? && staff2_mail.to_s.length < 1
        fail ArgumentError, 'invalid value for "staff2_mail", the character length must be great than or equal to 1.'
      end

      @staff2_mail = staff2_mail
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          representative_last_name == o.representative_last_name &&
          representative_last_name_kana == o.representative_last_name_kana &&
          representative_first_name == o.representative_first_name &&
          representative_first_name_kana == o.representative_first_name_kana &&
          representative_postal_code == o.representative_postal_code &&
          representative_prefecture == o.representative_prefecture &&
          representative_prefecture_kana == o.representative_prefecture_kana &&
          representative_address_municipality == o.representative_address_municipality &&
          representative_address_municipality_kana == o.representative_address_municipality_kana &&
          representative_address_section == o.representative_address_section &&
          representative_address_section_kana == o.representative_address_section_kana &&
          representative_address_chrome == o.representative_address_chrome &&
          representative_address_chrome_kana == o.representative_address_chrome_kana &&
          representative_address_building_name == o.representative_address_building_name &&
          representative_address_building_name_kana == o.representative_address_building_name_kana &&
          representative_tel == o.representative_tel &&
          representative_birthday == o.representative_birthday &&
          representative_gender == o.representative_gender &&
          staff1_last_name == o.staff1_last_name &&
          staff1_last_name_kana == o.staff1_last_name_kana &&
          staff1_first_name == o.staff1_first_name &&
          staff1_first_name_kana == o.staff1_first_name_kana &&
          staff1_company_name == o.staff1_company_name &&
          staff1_belongs == o.staff1_belongs &&
          staff1_tel == o.staff1_tel &&
          staff1_mail == o.staff1_mail &&
          staff2_last_name == o.staff2_last_name &&
          staff2_last_name_kana == o.staff2_last_name_kana &&
          staff2_first_name == o.staff2_first_name &&
          staff2_first_name_kana == o.staff2_first_name_kana &&
          staff2_company_name == o.staff2_company_name &&
          staff2_belongs == o.staff2_belongs &&
          staff2_tel == o.staff2_tel &&
          staff2_mail == o.staff2_mail &&
          corporate == o.corporate &&
          corporate_info == o.corporate_info
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [representative_last_name, representative_last_name_kana, representative_first_name, representative_first_name_kana, representative_postal_code, representative_prefecture, representative_prefecture_kana, representative_address_municipality, representative_address_municipality_kana, representative_address_section, representative_address_section_kana, representative_address_chrome, representative_address_chrome_kana, representative_address_building_name, representative_address_building_name_kana, representative_tel, representative_birthday, representative_gender, staff1_last_name, staff1_last_name_kana, staff1_first_name, staff1_first_name_kana, staff1_company_name, staff1_belongs, staff1_tel, staff1_mail, staff2_last_name, staff2_last_name_kana, staff2_first_name, staff2_first_name_kana, staff2_company_name, staff2_belongs, staff2_tel, staff2_mail, corporate, corporate_info].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      attributes = attributes.transform_keys(&:to_sym)
      transformed_hash = {}
      openapi_types.each_pair do |key, type|
        if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = nil
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[attribute_map[key]].is_a?(Array)
            transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
          end
        elsif !attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
        end
      end
      new(transformed_hash)
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def self._deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = FincodeApiClient.const_get(type)
        klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
