=begin
#fincode API

#fincodeのAPIリファレンスです。\\ fincodeは決済情報のほか様々なリソースを管理できるため、リソース指向なREST APIをベースとしたインターフェイス設計のもとでAPIを提供しています。\\ APIの呼び出しにはAPIキーによる認証が必要であり、リクエストの際に`Authorization`ヘッダーに有効なAPIキーをセットすることで認証できます。 

The version of the OpenAPI document: 1.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FincodeApiClient::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = FincodeApiClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(FincodeApiClient::DefaultApi)
    end
  end

  # unit tests for authorize_payment
  # 決済 再オーソリ
  # 決済のオーソリを再度実行します。\\ \\ &#x60;pay_type&#x60;が&#x60;Card&#x60;かつ&#x60;status&#x60;が&#x60;CANCELED&#x60;の決済（キャンセル済みのカード決済）に対して実行ができ、初回決済時の情報を引き継いで再オーソリを行います。 
  # @param id オーダーID（決済情報のID）
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした決済のうち、&#x60;id&#x60;で指定した決済のオーソリを再度実行します。 
  # @option opts [PaymentCardReauthorizingRequest] :payment_card_reauthorizing_request 
  # @return [PaymentCardReauthorizingResponse]
  describe 'authorize_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cancel_payment
  # 決済 キャンセル
  # 決済をキャンセルします。キャンセルに成功すると&#x60;status&#x60;はキャンセル済み（&#x60;CANCELED&#x60;）に遷移します。\\ \\ ユーザーへの返金の行われ方などは決済手段によって異なります。\\ 詳細は[Docs &gt; 決済](https://docs.fincode.jp/payment)から参照できます。 
  # @param id オーダーID（決済情報のID）
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした決済のうち、&#x60;id&#x60;で指定した決済をキャンセルします。 
  # @option opts [CancelPaymentRequest] :cancel_payment_request 
  # @return [CancelPayment200Response]
  describe 'cancel_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for capture_payment
  # 決済 売上確定
  # &#x60;status&#x60;が仮売上（&#x60;AUTHORIZED&#x60;）またはキャンセル（&#x60;CANCELED&#x60;）である決済に対して売上確定を行います。\\ 成功すると、ステータスが&#x60;CAPTURED&#x60;に遷移し、その時点を集計対象とした売上入金に反映されます。 
  # @param id オーダーID（決済情報のID）
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした決済のうち、&#x60;id&#x60;で指定した決済の売上確定を実行します。 
  # @option opts [CapturePaymentRequest] :capture_payment_request 
  # @return [CapturePayment200Response]
  describe 'capture_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for change_amount_of_payment
  # 決済 金額変更
  # 決済の利用金額を変更します。\\ 既に売上確定となっている決済は請求金額が変更され、仮売上となっている決済は確保している与信枠の金額が変更されます。 
  # @param id オーダーID（決済情報のID）
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした決済のうち、&#x60;id&#x60;で指定した決済の利用金額を変更します。 
  # @option opts [ChangeAmountOfPaymentRequest] :change_amount_of_payment_request 
  # @return [ChangeAmountOfPayment200Response]
  describe 'change_amount_of_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_card_registration_session
  # カード登録URL 作成
  # fincodeが提供するリダイレクト型カード登録ページを発行し、そのカード登録ページへのURLをレスポンスします。 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップ上の顧客に対してカードを登録するためのカード登録URLを発行します。 
  # @option opts [CardRegistrationSessionCreatingRequest] :card_registration_session_creating_request 
  # @return [CardRegistrationSessionCreatingResponse]
  describe 'create_card_registration_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_customer
  # 顧客 登録
  # 顧客情報を登録します。 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップに紐づく形で顧客情報を登録します。 
  # @option opts [CustomerCreatingRequest] :customer_creating_request 
  # @return [CustomerCreatingResponse]
  describe 'create_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_customer_card
  # カード 登録
  # &#x60;customer_id&#x60;で指定した顧客に対しカードを登録します。 
  # @param customer_id このカードが紐づく顧客のID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客に対してカードを登録します。 
  # @option opts [CustomerCardCreatingRequest] :customer_card_creating_request 
  # @return [CustomerCardCreatingResponse]
  describe 'create_customer_card test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_customer_payment_method
  # 決済手段 登録
  # &#x60;customer_id&#x60;で指定した顧客に対し、決済手段を登録します。 
  # @param customer_id 顧客ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客に対して決済手段を登録します。 
  # @option opts [CustomerPaymentMethodCreatingRequest] :customer_payment_method_creating_request 
  # @return [CustomerPaymentMethodCreatingResponse]
  describe 'create_customer_payment_method test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_payment
  # 決済 登録
  # 決済情報をfincodeに登録します。決済登録に成功した時点ではまだ顧客に対して請求はされていません。 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主として決済を登録します。テナントが&#x60;pay_type&#x60;で指定する決済手段契約の審査を完了させている必要があります。 
  # @option opts [CreatePaymentRequest] :create_payment_request 
  # @return [CreatePayment200Response]
  describe 'create_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_payment_bulk
  # 一括決済 登録
  # fincodeにJSON形式のファイルで一括決済情報を登録し、&#x60;process_plan_date&#x60;で指定した日時に一括決済処理を予約します。 
  # @param pay_type 
  # @param process_plan_date 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした決済情報を一括登録します。 
  # @option opts [String] :file 一括決済情報を記載したJSONファイル。\\\\ \\\\ 以下のようなファイルをアップロードします。 &#x60;&#x60;&#x60;json {     \\\&quot;data\\\&quot;: [         {             \\\&quot;id\\\&quot;: \\\&quot;order_001\\\&quot;,             \\\&quot;amount\\\&quot;: \\\&quot;1000\\\&quot;,             \\\&quot;tax\\\&quot;: \\\&quot;100\\\&quot;,             \\\&quot;customer_id\\\&quot;: \\\&quot;c_**********************\\\&quot;,             \\\&quot;card_id\\\&quot;: \\\&quot;cs_**********************\\\&quot;,             \\\&quot;client_field_1\\\&quot;: \\\&quot;自由項目1\\\&quot;,             \\\&quot;client_field_2\\\&quot;: \\\&quot;自由項目2\\\&quot;,             \\\&quot;client_field_3\\\&quot;: \\\&quot;自由項目3\\\&quot;         },         {             \\\&quot;id\\\&quot;: \\\&quot;order_002\\\&quot;,             \\\&quot;amount\\\&quot;: \\\&quot;1000\\\&quot;,             \\\&quot;customer_id\\\&quot;: \\\&quot;c_**********************\\\&quot;,             \\\&quot;card_id\\\&quot;: \\\&quot;cs_**********************\\\&quot;         },         ...     ] } &#x60;&#x60;&#x60; パラメータ仕様は以下の通りで、各パラメータの形式は決済登録・決済実行APIに準拠します。（*は必須項目）  - &#x60;data&#x60;: 決済情報のリストを格納する配列 - &#x60;data[].id&#x60;: オーダーID* - &#x60;data[].amount&#x60;: 利用金額* - &#x60;data[].tax&#x60;: 税送料 - &#x60;data[].customer_id&#x60;: 顧客ID* - &#x60;data[].card_id&#x60;: カードID - &#x60;data[].client_field_1&#x60;: 自由項目1 - &#x60;data[].client_field_2&#x60;: 自由項目2 - &#x60;data[].client_field_3&#x60;: 自由項目3 
  # @return [PaymentBulkCreatingResponse]
  describe 'create_payment_bulk test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_payment_session
  # 決済URL 作成
  # fincodeが提供するリダイレクト型決済ページを発行し、その決済ページへのURLをレスポンスします。 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップで決済を行います。 
  # @option opts [PaymentSessionCreatingRequest] :payment_session_creating_request 
  # @return [PaymentSessionCreatingResponse]
  describe 'create_payment_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_plan
  # プラン 登録
  # プラン情報を登録します。 
  # @param [Hash] opts the optional parameters
  # @option opts [PlanCreatingRequest] :plan_creating_request 
  # @return [PlanCreatingResponse]
  describe 'create_plan test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_subscription
  # サブスクリプション 登録
  # &#x60;customer_id&#x60;で指定した顧客に対して&#x60;plan_id&#x60;で指定したプランを適用したサブスクリプション情報を登録します。 
  # @param [Hash] opts the optional parameters
  # @option opts [SubscriptionCreatingRequest] :subscription_creating_request 
  # @return [SubscriptionCreatingResponse]
  describe 'create_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_tenant_with_existing_user
  # テナントショップ 作成（既存ユーザー参加）
  # 指定したプラットフォームショップのユーザーを新規テナントショップのオーナーとして新規テナントショップを作成するAPIです。\\ \\ &#x60;password&#x60;パラメータに関して、ユーザーのパスワードがfincode管理画面アプリケーション上で更新されることを想定して実装・運用することが推奨されます。 
  # @param [Hash] opts the optional parameters
  # @option opts [POSTJoinTenantsRequest] :post_join_tenants_request 
  # @return [POSTJoinTenantsResponse]
  describe 'create_tenant_with_existing_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_tenant_with_new_user
  # テナントショップ 作成（新規ユーザー登録）
  # 新規ユーザーを作成し、作成されたユーザーをオーナーとして新規テナントショップを作成するAPIです。\\ このAPIでのテナント作成に成功すると、登録されたメールアドレス宛にメールアドレス認証メールが送信されます。 
  # @param [Hash] opts the optional parameters
  # @option opts [POSTTenantEntriesRequest] :post_tenant_entries_request 
  # @return [POSTTenantEntriesResponse]
  describe 'create_tenant_with_new_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_customer
  # 顧客 削除
  # IDで指定した顧客情報を削除します。 
  # @param id 顧客ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客情報を削除します。 
  # @return [CustomerDeletingResponse]
  describe 'delete_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_customer_card
  # カード 削除
  # &#x60;customer_id&#x60;で指定した顧客に対し紐づくカードのうち&#x60;id&#x60;で指定したものを削除します。 
  # @param customer_id このカードが紐づく顧客のID
  # @param id 削除するカードのID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客に対して登録されたカードを削除します。 
  # @return [CustomerCardDeletingResponse]
  describe 'delete_customer_card test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_customer_payment_method
  # 決済手段 削除
  # &#x60;customer_id&#x60;で指定した顧客に対し紐づく決済手段のうち、&#x60;id&#x60;で指定したものを削除します。 
  # @param customer_id 顧客ID
  # @param id 決済手段ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客に紐づく決済手段からIDで指定した決済手段を削除します。 
  # @return [CustomerPaymentMethodDeletingResponse]
  describe 'delete_customer_payment_method test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_payment_bulk
  # 一括決済 削除
  # IDで指定した一括決済情報を削除します。\\ 一括決済処理がチェック済み（&#x60;status&#x60;が&#x60;CHECKED&#x60;）のものに限り削除できます。 
  # @param id 一括決済ID。\\ 削除対象の一括決済情報のIDを指定します。 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした一括決済情報を削除します。 
  # @return [PaymentBulkDeletingResponse]
  describe 'delete_payment_bulk test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_plan
  # プラン 削除
  # IDで指定したプラン情報を削除します。\\ プランが1つ以上のサブスクリプションで使用されているとき（&#x60;used_flag &#x3D; 1&#x60;のとき）、プランは削除できません。 
  # @param id プランID
  # @param [Hash] opts the optional parameters
  # @return [PlanDeletingResponse]
  describe 'delete_plan test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for execute_payment
  # 決済 実行
  # fincodeに登録された決済情報を指定し、請求を実行します。 
  # @param id オーダーID（決済情報のID）
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした決済のうち、&#x60;id&#x60;で指定した決済処理を実行します。 
  # @option opts [ExecutePaymentRequest] :execute_payment_request 
  # @return [ExecutePayment200Response]
  describe 'execute_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for execute_payment_after_three_d_secureecure
  # 認証後決済 実行
  # 3Dセキュア認証後の決済を実行します。\\ \\ 3Dセキュア認証APIもしくは認証結果確定APIのレスポンスの3Dセキュア認証結果（&#x60;tds2_trans_result&#x60;）が&#x60;Y&#x60;または&#x60;A&#x60;のとき、このAPIを実行して3Dセキュア認証後の決済を実行します。 
  # @param id オーダーID（決済情報のID）
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした決済のうち、&#x60;id&#x60;で指定した決済の3Dセキュア認証後決済を実行します。 
  # @option opts [PaymentCardExecutingAfterThreeDSecureRequest] :payment_card_executing_after_three_d_secure_request 
  # @return [PaymentCardExecutingAfterThreeDSecureResponse]
  describe 'execute_payment_after_three_d_secureecure test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_barcode_of_payment
  # バーコード発行
  # リクエストしたデバイスの情報に合わせてコンビニ決済のバーコードを再度発行します。 
  # @param id オーダーID（決済情報のID）
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主としたコンビニ決済のうち、&#x60;id&#x60;で指定した決済のバーコードを再度発行します。 
  # @option opts [PaymentKonbiniGeneratingBarcodeRequest] :payment_konbini_generating_barcode_request 
  # @return [PaymentKonbiniGeneratingBarcodeResponse]
  describe 'generate_barcode_of_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for request_production_environment
  # テナントショップ 本番環境申請
  # &#x60;id&#x60;で指定したテナントショップの本番環境の利用申請を行います。このAPIを呼び出すまでにテナント本番環境申請情報 更新APIで申請情報を用意しておく必要があります。 
  # @param tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップのものとしてファイルをアップロードします。 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :shop_id ショップID 
  # @option opts [EnableImmediateUse] :enable_immediate_use VISA/Mastercard即時利用をリクエストするかどうか\\\\ \\\\ 即時利用は以下の条件すべてに合致しないとき利用をリクエストできます。  - &#x60;本番環境申請情報.contract_info.site_published&#x60;が&#x60;true&#x60;でない（審査時点でWebサイトが用意されていない） - &#x60;本番環境申請情報.shop_info.deals_long_apply_content&#x60;が&#x60;true&#x60;である（審査に時間がかかる商材を取り扱うと表明している） 
  # @return [POSTContractsExaminationsResponse]
  describe 'request_production_environment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for reserve_provider
  # テナントショップ 決済手段追加申請
  # &#x60;id&#x60;で指定したテナントショップの決済手段の追加申請を行います。   ※ 申請状況の管理画面への反映には最大24時間程度のタイムラグがあります 
  # @param id 指定したテナントショップに対して決済手段を追加申請します。。&#x60;Tenant-Shop-Id&#x60;ヘッダーも併せて指定してください。 
  # @param tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップに対して決済手段を追加申請します。 
  # @param provider 追加対象決済手段\\\\ \\\\ 追加で申請する決済手段をリストで指定します。  - &#x60;PAYSLE&#x60;: コンビニ決済 - &#x60;PAYPAY&#x60;: PayPay - &#x60;APPLE_PAY_UC&#x60;: Apple Pay（VISA/Mastercard） - &#x60;APPLE_PAY_JCB&#x60;: Apple Pay（JCB/American Express/Diners Club） - &#x60;DIRECT_DEBIT&#x60;: 口座振替 - &#x60;VIRTUAL_ACCOUNT&#x60;: 銀行振込（バーチャル口座） 
  # @param [Hash] opts the optional parameters
  # @return [POSTProviderReserveResponse]
  describe 'reserve_provider test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_account
  # 売上入金 取得
  # IDで指定した売上入金を取得します。\\ &#x60;aggregate_term_start&#x60;から&#x60;aggregate_term_end&#x60;までの期間における売上の集計結果が含まれます。\\ \\ 集計された個々のレコードについては 売上入金明細 一覧取得API を利用することで取得できます。 
  # @param id 売上入金情報のID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップの売上入金情報のうち、指定したIDの売上入金情報を取得します。 
  # @return [AccountRetrievingResponse]
  describe 'retrieve_account test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_account_detail_list
  # 売上入金詳細 一覧取得
  # IDで指定した売上入金に紐づく売上入金詳細を一覧で取得します。\\ 1つの売上入金明細は、1件の決済／キャンセル／チャージバック／チャージバック取消調整のいずれかに対応します。 
  # @param id 売上入金情報のID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップの売上入金情報のうち、指定したIDの売上入金情報の売上入金詳細を取得します。 
  # @option opts [PaginationQueryParams] : 売上入金詳細の一覧取得において検索条件となるクエリパラメータ 
  # @return [AccountDetailListRetrievingResponse]
  describe 'retrieve_account_detail_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_account_list
  # 売上入金 一覧取得
  # 売上入金情報を一覧で取得します。クエリパラメータを指定して取得する条件を絞り込めます。 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップの売上入金情報から一覧で取得します。 
  # @option opts [RetrieveAccountListParameter] : 売上入金情報の一覧取得において検索条件となるクエリパラメータ 
  # @return [AccountListRetrievingResponse]
  describe 'retrieve_account_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_customer
  # 顧客 取得
  # IDで指定した顧客情報を取得します。 
  # @param id 顧客ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客情報を取得します。 
  # @return [CustomerRetrievingResponse]
  describe 'retrieve_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_customer_card
  # カード 取得
  # &#x60;customer_id&#x60;で指定した顧客に対し紐づくカードのうち&#x60;id&#x60;で指定したものを取得します。 
  # @param customer_id このカードが紐づく顧客のID
  # @param id 取得するカードのID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客に対して登録されたカードから取得します。 
  # @return [CustomerCardRetrievingResponse]
  describe 'retrieve_customer_card test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_customer_card_list
  # カード 一覧取得
  # &#x60;customer_id&#x60;で指定した顧客に対し紐づくカードを一覧で取得します。 
  # @param customer_id 顧客ID。 \\ この顧客に紐づくカードを一覧で取得します。 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客に対して登録されたカードの一覧を取得します。 
  # @return [CustomerCardListRetrievingResponse]
  describe 'retrieve_customer_card_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_customer_list
  # 顧客 一覧取得
  # 顧客情報を一覧で取得します。クエリパラメータを指定して取得する条件を絞り込めます。 
  # @param [Hash] opts the optional parameters
  # @option opts [RetrieveCustomerListParameter] : 顧客情報の一覧取得において検索条件となるクエリパラメータ 
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客から一覧で取得します。 
  # @return [CustomerListRetrievingResponse]
  describe 'retrieve_customer_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_customer_payment_method
  # 決済手段 取得
  # &#x60;customer_id&#x60;で指定した顧客に対し紐づく決済手段のうち、&#x60;id&#x60;で指定したものを取得します。 
  # @param customer_id 顧客ID
  # @param id 決済手段ID
  # @param  決済手段の取得において検索条件となるクエリパラメータ 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客に紐づく決済手段からIDで指定した決済手段を取得します。 
  # @return [CustomerPaymentMethodRetrievingResponse]
  describe 'retrieve_customer_payment_method test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_customer_payment_method_list
  # 決済手段 一覧取得
  # &#x60;customer_id&#x60;で指定した顧客に対し紐づく決済手段を一覧で取得します。 
  # @param customer_id 顧客ID
  # @param  決済手段の一覧取得において検索条件となるクエリパラメータ 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客に紐づく決済手段から一覧で取得します。 
  # @return [CustomerPaymentMethodListRetrievingResponse]
  describe 'retrieve_customer_payment_method_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_payment
  # 決済 取得
  # 指定した決済情報を取得します。 
  # @param id オーダーID（決済情報のID）
  # @param  決済の取得において検索条件となるクエリパラメータ 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした決済のうち、&#x60;id&#x60;で指定した決済情報を取得します。 
  # @return [RetrievePayment200Response]
  describe 'retrieve_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_payment_bulk_detail_list
  # 一括決済詳細 一覧取得
  # IDで指定した一括決済情報の詳細（決済1件ごとの情報）と各決済で発生したエラーの情報を一覧で取得します。 
  # @param id 一括決済ID。\\ 詳細を取得する一括決済情報のIDを指定します。 
  # @param  一括決済情報の一覧取得において検索条件となるクエリパラメータ 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした一括決済の詳細を一覧で取得します。 
  # @return [PaymentBulkDetailListRetrievingResponse]
  describe 'retrieve_payment_bulk_detail_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_payment_bulk_list
  # 一括決済 一覧取得
  # fincodeに登録した一括決済の情報を一覧で取得します。 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップを販売主とした一括決済情報を一覧で取得します。 
  # @option opts [RetrievePaymentBulkListParameter] : 一括決済情報の一覧取得において検索条件となるクエリパラメータ 
  # @return [PaymentBulkListRetrievingResponse]
  describe 'retrieve_payment_bulk_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_payment_list
  # 決済 一覧取得
  # 決済情報の一覧を取得します。 
  # @param  決済の一覧取得において検索条件となるクエリパラメータ 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく決済から一覧で取得します。 
  # @return [RetrievePaymentList200Response]
  describe 'retrieve_payment_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_plan
  # プラン 取得
  # IDで指定したプラン情報を取得します。 
  # @param id プランID
  # @param [Hash] opts the optional parameters
  # @return [PlanRetrievingResponse]
  describe 'retrieve_plan test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_plan_list
  # プラン 一覧取得
  # プラン情報を一覧で取得します。クエリパラメータを指定して取得する条件を絞り込めます。 
  # @param [Hash] opts the optional parameters
  # @option opts [RetrievePlanListParameter] : プラン情報の一覧取得において検索条件となるクエリパラメータ 
  # @return [PlanListRetrievingResponse]
  describe 'retrieve_plan_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_platform_account
  # プラットフォーム利用料収入 取得
  # IDで指定したプラットフォーム利用料による売上入金情報を取得します。\\ &#x60;aggregate_term_start&#x60;から&#x60;aggregate_term_end&#x60;までの期間におけるプラットフォーム利用料による売上の集計結果が含まれます。\\ \\ テナントショップごとの利用料収入については プラットフォーム利用料収入サマリー 一覧取得API を利用することで取得できます。 
  # @param id プラットフォーム利用料収入ID
  # @param [Hash] opts the optional parameters
  # @return [PlatformAccountRetrievingResponse]
  describe 'retrieve_platform_account test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_platform_account_list
  # プラットフォーム利用料収入 一覧取得
  # プラットフォーム利用料による売上入金情報を一覧で取得します。クエリパラメータを指定して取得する条件を絞り込めます。 
  # @param [Hash] opts the optional parameters
  # @option opts [RetrievePlatformAccountListParameter] : プラットフォーム利用料による売上入金情報の一覧取得において検索条件となるクエリパラメータ 
  # @return [PlatformAccountListRetrievingResponse]
  describe 'retrieve_platform_account_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_platform_account_summary_list
  # プラットフォーム利用料収入サマリー 一覧取得
  # IDで指定したプラットフォーム利用料収入のサマリーを一覧で取得します。クエリパラメータを指定して取得する条件を絞り込めます。\\ サマリー情報の中にはテナントショップごとの利用料収入についての情報が含まれます。 
  # @param id プラットフォーム利用料収入ID
  # @param [Hash] opts the optional parameters
  # @option opts [RetrievePlatformAccountSummaryListParameter] : プラットフォーム利用料による売上入金情報の一覧取得において検索条件となるクエリパラメータ 
  # @return [PlatformAccountSummaryListRetrievingResponse]
  describe 'retrieve_platform_account_summary_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_platform_shop
  # プラットフォームショップ 取得
  # &#x60;id&#x60;で指定したプラットフォームショップ（メインショップ・サブショップ）を取得します。 
  # @param id ショップID
  # @param [Hash] opts the optional parameters
  # @return [PlatformShopRetrievingResponse]
  describe 'retrieve_platform_shop test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_platform_shop_list
  # プラットフォームショップ 一覧取得
  # プラットフォームショップ（メインショップ・サブショップ）を一覧で取得します。\\ クエリパラメータを指定して取得する条件を絞り込めます。 
  # @param [Hash] opts the optional parameters
  # @option opts [RetrievePlatformShopListParameter] : プラットフォーム情報の一覧取得において検索条件となるクエリパラメータ 
  # @return [PlatformShopListRetrievingResponse]
  describe 'retrieve_platform_shop_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_subscription
  # サブスクリプション 取得
  # IDで指定したサブスクリプション情報を取得します。 
  # @param id サブスクリプションID
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionRetrievingResponse]
  describe 'retrieve_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_subscription_list
  # サブスクリプション 一覧取得
  # サブスクリプション情報を一覧で取得します。クエリパラメータを指定して取得する条件を絞り込めます。 
  # @param  サブスクリプション情報の一覧取得において検索条件となるクエリパラメータ 
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionListRetrievingResponse]
  describe 'retrieve_subscription_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_subscription_result_list
  # サブスクリプション結果 一覧取得
  # サブスクリプションにより発生した課金の結果を一覧で取得します。クエリパラメータを指定して取得する条件を絞り込めます。 
  # @param  サブスクリプション結果の一覧取得において検索条件となるクエリパラメータ 
  # @param id サブスクリプションID
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionResultListRetrievingResponse]
  describe 'retrieve_subscription_result_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_tenant_contract
  # テナントショップ契約情報 取得
  # &#x60;id&#x60;で指定したテナントショップの契約情報を取得します。 
  # @param id 指定したテナントショップの契約情報を取得します。&#x60;Tenant-Shop-Id&#x60;ヘッダーも併せて指定してください。 
  # @param tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップの契約情報を取得します。 
  # @param [Hash] opts the optional parameters
  # @return [ContractsRetrievingResponse]
  describe 'retrieve_tenant_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_tenant_examination_info
  # （旧）テナントショップ本番環境申請情報 取得
  # ※ このAPIの使用は現在非推奨です。新しいテナントショップ本番環境申請情報 取得APIをご利用ください。\\ &#x60;id&#x60;で指定したテナントショップの本番環境申請情報を取得します。 
  # @param id 指定したテナントショップの本番環境申請情報を取得します。&#x60;Tenant-Shop-Id&#x60;ヘッダーも併せて指定してください。 
  # @param tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップの本番環境申請情報を取得します。 
  # @param [Hash] opts the optional parameters
  # @return [ExaminationInfoRetrievingResponse]
  describe 'retrieve_tenant_examination_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_tenant_examination_info_v2
  # テナントショップ本番環境申請情報 取得
  # &#x60;id&#x60;で指定したテナントショップの本番環境申請情報を取得します。 
  # @param id 指定したテナントショップの本番環境申請情報を取得します。&#x60;Tenant-Shop-Id&#x60;ヘッダーも併せて指定してください。 
  # @param tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップの本番環境申請情報を取得します。 
  # @param [Hash] opts the optional parameters
  # @return [ExaminationInfoV2RetrievingResponse]
  describe 'retrieve_tenant_examination_info_v2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_tenant_shop
  # テナントショップ 取得
  # &#x60;id&#x60;で指定したテナント情報を取得します。 
  # @param id ショップID 
  # @param [Hash] opts the optional parameters
  # @return [TenantShopRetrievingResponse]
  describe 'retrieve_tenant_shop test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_tenant_shop_list
  # テナントショップ 一覧取得
  # テナントショップを一覧で取得します。\\ クエリパラメータを指定して取得する条件を絞り込めます。 
  # @param [Hash] opts the optional parameters
  # @option opts [RetrieveTenantShopListParameter] : テナント情報の一覧取得において検索条件となるクエリパラメータ 
  # @return [TenantShopListRetrievingResponse]
  describe 'retrieve_tenant_shop_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for unsubscripbe_subscription
  # サブスクリプション 解約
  # IDで指定したサブスクリプションを解約し、請求を停止します。 
  # @param id サブスクリプションID
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionUnsubscribingResponse]
  describe 'unsubscripbe_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_customer
  # 顧客 更新
  # IDで指定した顧客情報を更新します。 
  # @param id 顧客ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客情報を更新します。 
  # @option opts [CustomerUpdatingRequest] :customer_updating_request 
  # @return [CustomerUpdatingResponse]
  describe 'update_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_customer_card
  # カード 更新
  # &#x60;customer_id&#x60;で指定した顧客に対し紐づくカードのうち&#x60;id&#x60;で指定したものを更新します。 
  # @param customer_id このカードが紐づく顧客のID
  # @param id 更新するカードのID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ 顧客情報を共有しないプラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ このテナントショップに紐づく顧客のうち、指定したIDの顧客に対して登録されたカードの情報を更新します。 
  # @option opts [CustomerCardUpdatingRequest] :customer_card_updating_request 
  # @return [CustomerCardUpdatingResponse]
  describe 'update_customer_card test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_plan
  # プラン 更新
  # IDで指定したプラン情報を更新します。\\ プランが1つ以上のサブスクリプションで使用されているとき（&#x60;used_flag &#x3D; 1&#x60;のとき）、プランは更新できません。 
  # @param id プランID
  # @param [Hash] opts the optional parameters
  # @option opts [PlanUpdatingRequest] :plan_updating_request 
  # @return [PlanUpdatingResponse]
  describe 'update_plan test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_platform_shop
  # プラットフォームショップ 更新
  # &#x60;examination_master_id&#x60;で指定した決済手段に関してプラットフォーム利用料を更新します。 
  # @param id ショップID
  # @param [Hash] opts the optional parameters
  # @option opts [PlatformShopUpdatingRequest] :platform_shop_updating_request 
  # @return [PlatformShopUpdatingResponse]
  describe 'update_platform_shop test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_subscription
  # サブスクリプション 更新
  # IDで指定したサブスクリプション情報を更新します。\\ 指定されたパラメータのみ更新します。\\ サブスクリプションの初回課金がすでに行われているとき（&#x60;start_date ≤ {{現在時刻}}&#x60;のとき）、サブスクリプションは更新できません。 
  # @param id サブスクリプションID
  # @param [Hash] opts the optional parameters
  # @option opts [SubscriptionUpdatingRequest] :subscription_updating_request 
  # @return [SubscriptionUpdatingResponse]
  describe 'update_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_tenant_examination_info
  # （旧）テナントショップ本番環境申請情報 更新
  # ※ このAPIの使用は現在非推奨です。新しいテナントショップ本番環境申請情報 更新APIをご利用ください。\\ &#x60;id&#x60;で指定したテナントショップの本番環境申請情報を更新します。 
  # @param id 指定したテナントショップの本番環境申請情報を更新します。&#x60;Tenant-Shop-Id&#x60;ヘッダーも併せて指定してください。 
  # @param tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップの本番環境申請情報を更新します。 
  # @param [Hash] opts the optional parameters
  # @option opts [ExaminationInfoUpdatingRequest] :examination_info_updating_request 
  # @return [ExaminationInfoUpdatingResponse]
  describe 'update_tenant_examination_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_tenant_examination_info_v2
  # テナントショップ本番環境申請情報 更新
  # &#x60;id&#x60;で指定したテナントショップの本番環境申請情報を更新します。 
  # @param id 指定したテナントショップの本番環境申請情報を更新します。&#x60;Tenant-Shop-Id&#x60;ヘッダーも併せて指定してください。 
  # @param tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップの本番環境申請情報を更新します。 
  # @param [Hash] opts the optional parameters
  # @option opts [ExaminationInfoV2UpdatingRequest] :examination_info_v2_updating_request 
  # @return [ExaminationInfoV2UpdatingResponse]
  describe 'update_tenant_examination_info_v2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_tenant_shop
  # テナントショップ 更新
  # &#x60;examination_master_id&#x60;で指定した決済手段におけるプラットフォーム利用料などの設定の変更を&#x60;id&#x60;で指定したテナントに対して実行します。 
  # @param id ショップID 
  # @param [Hash] opts the optional parameters
  # @option opts [TenantShopUpdatingRequest] :tenant_shop_updating_request 
  # @return [TenantShopUpdatingResponse]
  describe 'update_tenant_shop test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for upload_examination_file
  # テナントショップ 審査ファイルアップロード
  # &#x60;id&#x60;で指定したテナントショップの審査に必要なファイルのアップロードを行います。 
  # @param id 指定したテナントショップのものとしてファイルをアップロードします。&#x60;Tenant-Shop-Id&#x60;ヘッダーも併せて指定してください。 
  # @param tenant_shop_id &lt;span class&#x3D;\&quot;smallText color--red-400\&quot;&gt;※ プラットフォームのメインショップのみ指定可&lt;/span&gt;\\ テナントショップID。\\ 指定したテナントショップのものとしてファイルをアップロードします。 
  # @param [Hash] opts the optional parameters
  # @option opts [ExaminationFileType] :type 
  # @option opts [Object] :data 審査ファイルデータ\\\\ \\\\ 画像ファイルをマルチパートアップロードするときはこの&#x60;data&#x60;フィールドに画像データを設定します。 
  # @return [ExaminationFileUploadingResponse]
  describe 'upload_examination_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
